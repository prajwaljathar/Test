#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: service-1
#spec:
#  replicas: 2
#  selector:
#    matchLabels:
#      app: service-1
#  template:
#    metadata:
#      labels:
#        app: service-1
#    spec:
#      containers:
#        - name: service-1
#          image: 539247471581.dkr.ecr.eu-north-1.amazonaws.com/ecr/test:aap1
#          ports:
#            - containerPort: 8080
            
            
             

# Spring Boot Service 1 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: service-1
  template:
    metadata:
      labels:
        app: service-1
    spec:
      containers:
        - name: service-1
          image: 539247471581.dkr.ecr.eu-north-1.amazonaws.com/ecr/test:aap1
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-service:9092"
            - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
              value: "org.apache.kafka.common.serialization.StringSerializer"
            - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
              value: "org.apache.kafka.common.serialization.StringSerializer"
            - name: SPRING_KAFKA_CONSUMER_GROUP_ID
              value: "log-group"
            - name: SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET
              value: "earliest"
            - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
              value: "org.apache.kafka.common.serialization.StringDeserializer"
            - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
              value: "org.apache.kafka.common.serialization.StringDeserializer"
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "*"
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              value: "always"